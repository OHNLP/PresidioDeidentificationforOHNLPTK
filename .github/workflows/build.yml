name: Build and Release Module

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build-envs:
    name: Build portable conda env
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10
      - name: Install dependencies
        run: |
          $CONDA/bin/conda env update --file environment.yml --name base
          $CONDA/bin/conda-pack -n base -o env-${{ matrix.os }}.tar.gz
      - name: Upload environment archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-env
          path: env-${{ matrix.os }}.tar.gz
  build-prepackaged-dist:
    name: Build Offline Module Archive
    needs: build-envs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download windows env file
        uses: actions/download-artifact@v3
        with:
          name: env-windows_latest.tar.gz
      - name: Download macos env file
        uses: actions/download-artifact@v3
        with:
          name: env-macos_latest.tar.gz
      - name: Download ubuntu env file
        uses: actions/download-artifact@v3
        with:
          name: env-ubuntu_latest.tar.gz
      - name: Rename environments
        shell: bash
        run: |
          mv env-windows_latest.tar.gz env-windows.tar.gz
          mv env-macos_latest.tar.gz env-macos.tar.gz
          mv env-ubuntu_latest.tar.gz env-linux.tar.gz
      - name: Zip Package for Final Release
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r PresidioDeidentificationForOHNLPTK.zip .
      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
          tag_name: ${{ github.ref }}
          # The name of the release. For example, `Release v1.0.1`
          release_name: Release ${{ github.ref }}
          # Text describing the contents of the tag.
          body: Release Autonomously Generated By CI on Pushed Tag
          # `true` to create a draft (unpublished) release, `false` to create a published one. Default: `false`
          draft: false # optional
          # `true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`
          prerelease: false # optional
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Backbone.zip
          asset_name: Backbone.zip
          asset_content_type: application/zip





